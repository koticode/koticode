-- Ниже приведены запросы SQL, которые позволят оценить мои навыки в их составлении.
-- Файлы с самой базой(Base.sql) и с запросами к ней(SQL_requests.sql)  можно загрузить в СУБД и повыполнять запросы. Если СУБД под рукой нет, а нужен доступ к данным таблиц  для ознакомления - таблицы этой БД со всеми данными я экспортировал в отдельныЙ файл(Таблицы.xlsx).


-- Постановка задачи:
-- Представим, что для отдела продаж потребовалось создать несколько запросов для получения необходимой информации из базы данных. Они вводят нужные им критерии, жмут кнопку - и получают необходимые данные.
-- Я придумал запросы, которые будут полезны в реальной жизни, и которые бы показали, что я умею использовать язык SQL на практике.
-- Теоретически, запросы могли бы быть написаны не мной, а разработчиком. А моя задача, как тестировщика, была бы проверить корректность их работы на тестовых данных.
-- Для проверки корректности запросов в базе excercises создано 4 таблицы(Клиент, Товар, ПродажаЗаголовок, ПродажаСтрока) с первичными ключами(см.EER диаграмму)
-- Тестовые данные я подбирал так, чтобы они были хорошей проверкой самих запросов на корректность. Для этого мной применены техники тест-дизайна- классы эквивалентности и граничные значения.
-- В запросе 4 намеренно допущена ошибка, чтобы по ней можно было составить баг-репорт.


-- 1) Запрос выводит количество товаров каждой категории из таблицы Товар.
select КатегорияТовара, count(КатегорияТовара) as 'Количество' from Товар Group by КатегорияТовара;

-- 2) ПОЛУЧЕНИЕ ДАННЫХ ЗА ОПРЕДЕЛЕННЫЙ ПЕРИОД ВРЕМЕНИ
-- Получение списка проданных товаров и сумм продаж каждого товара по месяцам 2021 года. 
select Название AS 'Наименование Товара',date_format(ДатаДокумента, '%m') AS 'Месяц',sum(Цена*`Кол-во`) AS 'Сумма продаж' from ПродажаЗаголовок join 
ПродажаСтрока on ПродажаСтрока.НомерДокумента=ПродажаЗаголовок.НомерДокумента join 
Товар on ПродажаСтрока.КодТовара=Товар.КодТовара 
where year(ДатаДокумента)='2021'
Group by Название, date_format(ДатаДокумента, '%m');

-- 3) Применяются: INNER JOIN нескольких таблиц, WHERE,HAVING, GROUP BY, ORDER BY, псевдоним, операция сравнения. 
-- Запрос, выводящий ФИО клиентов, которые приобрели в мае 2021 года товаров категории «Системы контроля» на сумму менее 300 000.
Select Фамилия, Имя, Отчество, sum(цена*`Кол-во`) as 'Сумма покупок за май 2021' from Товар join 
ПродажаСтрока on Товар.КодТовара=ПродажаСтрока.КодТовара join 
ПродажаЗаголовок on ПродажаСтрока.НомерДокумента=ПродажаЗаголовок.НомерДокумента join 
Клиент on Клиент=КодКлиента 
where Month(ДатаДокумента)='05' and year(ДатаДокумента)='2021'and КатегорияТовара='Системы контроля' group by Фамилия, Имя, Отчество having sum(цена*`Кол-во`)<300000 order by КодКлиента;

-- 4) LEFT JOIN
-- Позволяет посмотреть суммы продаж по каждому товару из ассортимента и выявить неликвид. Показывает все товары, которые есть, даже если они не были куплены ни разу("Батарейка" как раз такой).
-- Здесь СПЕЦИАЛЬНО ДОПУЩЕНА ОШИБКА, чтобы по ней можно было составить баг-репорт. Вместо `Кол-во`*Цена д.б. sum(`Кол-во`*Цена) в обоих местах запроса.
select Название, `Кол-во`*Цена as "Сумма" from Товар left join ПродажаСтрока on Товар.КодТовара=ПродажаСтрока.КодТовара group by Название order by `Кол-во`*Цена;

-- 5) RIGHT JOIN
-- Показывает ФИО всех клиентов из базы, и отобразит номера только тех клиентов, которые совершили хотя бы одну покупку(это те, кто есть в табл."ПродажаЗаголовок")
select distinct  Фамилия, Имя, Отчество, Клиент from ПродажаЗаголовок RIGHT JOIN Клиент ON Клиент.КодКлиента=ПродажаЗаголовок.Клиент order by Клиент;

-- 6) ВЛОЖЕННЫЙ ПОДЗАПРОС
-- Запрос, выводящий ФИО клиентов, по которым не было продаж за весь период.
Select distinct Фамилия, Имя, Отчество from ПродажаЗаголовок join Клиент on КодКлиента not in(select distinct Клиент from ПродажаЗаголовок);


